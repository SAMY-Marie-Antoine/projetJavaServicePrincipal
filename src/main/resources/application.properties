spring.application.name=projetJavaServicePrincipal
# Configuration du port du serveur Tomcat
server.port = 8081

# Connexion JPA à la base de données
spring.datasource.url = jdbc:postgresql://localhost:5432/baseuser
spring.datasource.username = postgres
spring.datasource.password = root

#log
logging.level.fr.formation = DEBUG

# Configuration pour auto-générer les tables & champs
spring.jpa.generate-ddl = true

# Afficher les requêtes SQL générées par Hibernate
spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto=update

# Activer le CircuitBreaker (Resilience4J) pour OpenFeign
spring.cloud.openfeign.circuitbreaker.enabled = true
spring.cloud.openfeign.circuitbreaker.alphanumeric-ids.enabled = true

# Configuration du Broker Kafka
spring.cloud.stream.kafka.binder.brokers = localhost:9092

# On indique tous les beans qu'on veut utiliser pour notre Broker
spring.cloud.function.definition = onVerificationCreated

# Le nom du topic à utiliser pour le bean "onMessageDemo"
pring.cloud.stream.bindings.onVerificationCreated-in-0.destination = verification.created

# Le nom du groupe Kafka à utiliser pour le topic "demo"
spring.cloud.stream.bindings.onVerificationCreated-in-0.group = projetJavaServiceVerification

eureka.instance.prefer-ip-address = true

allowed.origin=http://localhost:4200

# Les propriétés de la messagerie
# Configuration du serveur SMTP de Gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=passlockhm@gmail.com
spring.mail.password=dugx vdvz tueh irfj

# Activation de l'authentification et du chiffrement STARTTLS
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Activation du mode débogage pour les e-mails
spring.mail.debug=true